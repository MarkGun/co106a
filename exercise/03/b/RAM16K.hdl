// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/b/RAM16K.hdl

/**
 * Memory of 16K registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM16K {
    IN in[16], load, address[14];
    OUT out[16];

    PARTS:
    // Put your code here:
    //DMux8Way (in=load,sel=address[11..13],a=c0,b=c1,c=c2,d=c3,e=c4,f=c5,g=c6,h=c7);
    DMux4Way(in=load, sel=address[12..13], a=c0, b=c1, c=c2, d=c3);
    RAM4K (in=in,load=c0,address=address[0..11],out=o00);
    RAM4K (in=in,load=c1,address=address[0..11],out=o01);
    RAM4K (in=in,load=c2,address=address[0..11],out=o02);
    RAM4K (in=in,load=c3,address=address[0..11],out=o03);
    Mux4Way16(a=o00, b=o01, c=o02, d=o03, sel=address[12..13], out=out);
    //Mux8Way16 (a=o00,b=o01,c=o02,d=o03,e=o04,f=o05,g=o06,h=o07,sel=address[11..13],out=out);
}