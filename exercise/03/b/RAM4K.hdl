// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/b/RAM4K.hdl

/**
 * Memory of 4K registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM4K {
    IN in[16], load, address[12];
    OUT out[16];

    PARTS:
    // Put your code here:
    DMux8Way (in=load,sel=address[9..11],a=c0,b=c1,c=c2,d=c3,e=c4,f=c5,g=c6,h=c7);
    RAM512 (in=in,load=c0,address=address[0..8],out=o00);
    RAM512 (in=in,load=c1,address=address[0..8],out=o01);
    RAM512 (in=in,load=c2,address=address[0..8],out=o02);
    RAM512 (in=in,load=c3,address=address[0..8],out=o03);
    RAM512 (in=in,load=c4,address=address[0..8],out=o04);
    RAM512 (in=in,load=c5,address=address[0..8],out=o05);
    RAM512 (in=in,load=c6,address=address[0..8],out=o06);
    RAM512 (in=in,load=c7,address=address[0..8],out=o07);
    Mux8Way16 (a=o00,b=o01,c=o02,d=o03,e=o04,f=o05,g=o06,h=o07,sel=address[9..11],out=out);
}